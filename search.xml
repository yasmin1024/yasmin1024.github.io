<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>门面模式&amp;适配器模式&amp;注册器模式</title>
      <link href="/post/7d755a85.html"/>
      <url>/post/7d755a85.html</url>
      
        <content type="html"><![CDATA[<p>通过一个示例来理解使用门面模式、适配器模式、注册器模式的应用场景和优势。</p><h1 id="1-场景示例"><a href="#1-场景示例" class="headerlink" title="1.场景示例"></a>1.场景示例</h1><p>现已经有 文章、图片、视频 三种数据源，要求实现一个搜索的功能，根据不同的搜索类型返回对应的数据信息。最常见的做法就是提供三个不同查询接口给客户端，客户端根据类型去判断调用哪个方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">searchText</span> <span class="operator">=</span> <span class="string">&quot;cat&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">searchType</span> <span class="operator">=</span> <span class="string">&quot;passage&quot;</span>;</span><br><span class="line">        <span class="type">SearchTypeEnum</span> <span class="variable">searchTypeEnum</span> <span class="operator">=</span> SearchTypeEnum.searchEnumByValue(searchType);</span><br><span class="line">        <span class="type">PassageService</span> <span class="variable">passageService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PassageService</span>();</span><br><span class="line">        <span class="type">PictureService</span> <span class="variable">pictureService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PictureService</span>();</span><br><span class="line">        <span class="type">VideoService</span> <span class="variable">videoService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">VideoService</span>();</span><br><span class="line">        List&lt;?&gt; dataList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 此处可能会有许多其他逻辑</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="keyword">switch</span> (searchType)&#123;</span><br><span class="line">            <span class="keyword">case</span> PASSAGE: <span class="comment">//文章</span></span><br><span class="line">                dataList = passageService.getPassage(searchText);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> PICTURE: <span class="comment">//图片</span></span><br><span class="line">                <span class="type">Picture</span> <span class="variable">picture</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Picture</span>();</span><br><span class="line">                picture.setTitle(searchText);</span><br><span class="line">                dataList = pictureService.getPicture(picture);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> VIDEO: <span class="comment">//视频</span></span><br><span class="line">                dataList = videoService.getVideo(searchText);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(dataList.toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过代码可以看出来，这种实现方式，耦合度非常高，如果后面再增加新的数据类型，那么客户端也要同步增加查询逻辑。<br>为了解决这个问题，引入门面模式，可以将整个查询逻辑封装成一个接口提供给客户端，这样无论不同数据的查询接口怎么变化都不会影响到客户端的使用。</p><h1 id="2-门面模式"><a href="#2-门面模式" class="headerlink" title="2.门面模式"></a>2.门面模式</h1><p><img src="https://raw.githubusercontent.com/yasmin1024/hexoBlogImgRepository/main/postImg/01/20230501132220.png"></p><p>门面模式又称为外观模式，<strong>是指提供一个统一的接口去访问多个子系统的多个不同的接口，它为子系统中的一组接口提供一个统一的高层接口。使得子系统更容易使用。</strong></p><p>看上图可以知道，门面模式分为三个部分：客户端、门面、子系统。</p><p>客户端调用门面提供的接口，不再考虑要如何调用子系统的接口</p><p>门面封装了子系统的接口，向客户端提供了统一的接口来使用</p><p>子系统不再直接与客户端交互，子系统接口发生变化，客户端不需要与子系统同时进行改动。</p><p>那么在当前搜索查询的场景中，我们需要根据类型来判断调用哪个查询接口的逻辑封装到一个门面中，客户端直接调用门面提供的接口即可，无需再考虑需要去调用哪个接口了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchFacade</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">PassageService</span> <span class="variable">passageService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PassageService</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">PictureService</span> <span class="variable">pictureService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PictureService</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">VideoService</span> <span class="variable">videoService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">VideoService</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">searchAll</span><span class="params">(String searchText,String searchType)</span>&#123;</span><br><span class="line">        <span class="type">SearchTypeEnum</span> <span class="variable">searchTypeEnum</span> <span class="operator">=</span> SearchTypeEnum.searchEnumByValue(searchType);</span><br><span class="line"></span><br><span class="line">        List&lt;?&gt; dataList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 此处可能会有许多其他逻辑</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="keyword">switch</span> (searchTypeEnum)&#123;</span><br><span class="line">            <span class="keyword">case</span> PASSAGE:</span><br><span class="line">                dataList = passageService.getPassage(searchText);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> PICTURE:</span><br><span class="line">                <span class="type">Picture</span> <span class="variable">picture</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Picture</span>();</span><br><span class="line">                picture.setTitle(searchText);</span><br><span class="line">                dataList = pictureService.getPicture(picture);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> VIDEO:</span><br><span class="line">                dataList = videoService.getVideo(searchText);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dataList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在客户端里，只需要调用searchFacade.searchAll方法即可，无需考虑如何使用子系统的接口了。</p><p>这种方式相比之前：</p><ul><li>实现了客户端与子系统的松耦合，子系统接口的变化不会影响到使用它的客户端，只需要调整门面即可</li><li>客户端无需分别判断需要使用哪个接口，只需要调用门面中的接口，提高了子系统的易用性，客户端代码量也大大减少了</li><li>门面提供了一个统一访问子系统的接口，并不会影响客户端的使用</li></ul><p>如果后续要增加新的数据源，能允许所有的数据源都接入吗？那肯定是不行的，不做任何处理直接接入新的数据源可能给我们的系统带来风险，因此我们需要对能接入的数据源做一个规范：</p><ul><li>数据源接入时需要满足什么条件</li><li>接入方需要注意什么事情</li></ul><p>既然定义了规范，那么我们可以将这个规范通过接口的方式来声明，所有接入的数据源都需要实现这个接口。</p><p>我们要求查询接口都要支持关键词查询，现在发现原有的接口（pictureService.getPicture）不支持，但是我们必须要使用这个功能，怎么办？</p><ul><li>1.与接口提供方对接，讨论是否可以提供符合规则的接口</li><li>2.通过转换将这个不兼容的接口转换为符合规则的接口</li></ul><p>第二种方式就是适配器模式。</p><h1 id="2-适配器模式"><a href="#2-适配器模式" class="headerlink" title="2.适配器模式"></a>2.适配器模式</h1><p><strong>将一个类的接口，转换成客户期望的另一个接口。适配器让原本接口不兼容的类可以合作无间。</strong></p><p>最常见的适配器模式的应用就是转接头，例如手机只有type-c接口，但是耳机线是3.5mm接口的，这时就需要一个转接头使得耳机能够接入手机。</p><p>这里我们引入一个适配器，将不符合规则的接口转换为符合规则的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 搜索适配器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SearchAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 执行搜索 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> searchText 关键词</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">doSearch</span><span class="params">(String searchText)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PassageAdaptee</span> <span class="keyword">implements</span> <span class="title class_">SearchAdapter</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">doSearch</span><span class="params">(String searchText)</span> &#123;</span><br><span class="line">        <span class="type">PassageService</span> <span class="variable">passageService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PassageService</span>();</span><br><span class="line">        <span class="keyword">return</span> passageService.getPassage(searchText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PictureAdaptee</span> <span class="keyword">implements</span> <span class="title class_">SearchAdapter</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">doSearch</span><span class="params">(String searchText)</span> &#123;</span><br><span class="line">        <span class="type">PictureService</span> <span class="variable">pictureService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PictureService</span>();</span><br><span class="line">        <span class="type">Picture</span> <span class="variable">picture</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Picture</span>();</span><br><span class="line">        picture.setTitle(searchText);</span><br><span class="line">        <span class="keyword">return</span> pictureService.getPicture(picture);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">VideoAdaptee</span> <span class="keyword">implements</span> <span class="title class_">SearchAdapter</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">doSearch</span><span class="params">(String searchText)</span> &#123;</span><br><span class="line">        <span class="type">VideoService</span> <span class="variable">videoService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">VideoService</span>();</span><br><span class="line">        <span class="keyword">return</span> videoService.getVideo(searchText);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchFacade</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">PassageAdaptee</span> <span class="variable">passageAdaptee</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PassageAdaptee</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">PictureAdaptee</span> <span class="variable">pictureAdaptee</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PictureAdaptee</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="type">VideoAdaptee</span> <span class="variable">videoAdaptee</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">VideoAdaptee</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">searchAll</span><span class="params">(String searchText,String searchType)</span>&#123;</span><br><span class="line">        <span class="type">SearchTypeEnum</span> <span class="variable">searchTypeEnum</span> <span class="operator">=</span> SearchTypeEnum.searchEnumByValue(searchType);</span><br><span class="line"></span><br><span class="line">        List&lt;?&gt; dataList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 此处可能会有许多其他逻辑</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="type">SearchAdapter</span> <span class="variable">adapter</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (searchTypeEnum)&#123;</span><br><span class="line">            <span class="keyword">case</span> PASSAGE:</span><br><span class="line">                adapter = passageAdaptee;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> PICTURE:</span><br><span class="line">                adapter = pictureAdaptee;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> VIDEO:</span><br><span class="line">                adapter = videoAdaptee;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">        &#125;</span><br><span class="line">        dataList = adapter.doSearch(searchText);</span><br><span class="line">        <span class="keyword">return</span> dataList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过适配器模式，我们将数据源提供的原始接口与facade解耦了，新增数据源就无需在facade中增加直接调用新数据源接口的代码了，大大提高了通用性、扩展性。</p><p>不过当数据源不断增多的时候，switch下的条件分支也会不断增多，这样的代码不够优雅，我们能否对这段代码进行优化呢？</p><p>首先我们来看switch这一块执行的逻辑，就是根据不同的搜索类别赋值给adapter不同的实例对象，除此之外没有其他的逻辑，那我们就可以将 searchType -&gt; xxxxxAdaptee 当作一个映射（Map），根据searchType获取到对应的adapter的实例。</p><p>那么这个map其实可以看作是一个注册容器，将不同的XXXXXAdaptee注册到map中，这其实就是注册器模式。</p><h1 id="3-注册器模式"><a href="#3-注册器模式" class="headerlink" title="3.注册器模式"></a>3.注册器模式</h1><p>多个实例注册到一个统一的注册器中，然后通过方法直接去调用需要的实例。</p><p>我们这里是将xxxxAdaptee注册到容器map中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchRegister</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String,SearchAdapter&gt; searchAdapterMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, SearchAdapter&gt;()&#123;&#123;</span><br><span class="line">       put(SearchTypeEnum.PASSAGE.getValue(), <span class="keyword">new</span> <span class="title class_">PassageAdaptee</span>());</span><br><span class="line">       put(SearchTypeEnum.PICTURE.getValue(), <span class="keyword">new</span> <span class="title class_">PictureAdaptee</span>());</span><br><span class="line">       put(SearchTypeEnum.VIDEO.getValue(), <span class="keyword">new</span> <span class="title class_">VideoAdaptee</span>());</span><br><span class="line">    &#125;&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> SearchAdapter <span class="title function_">getSearchAdapterByType</span><span class="params">(String type)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> searchAdapterMap.get(type);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SearchFacade</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List <span class="title function_">searchAll</span><span class="params">(String searchText,String searchType)</span>&#123;</span><br><span class="line">        <span class="type">SearchTypeEnum</span> <span class="variable">searchTypeEnum</span> <span class="operator">=</span> SearchTypeEnum.searchEnumByValue(searchType);</span><br><span class="line"></span><br><span class="line">        List&lt;?&gt; dataList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 此处可能会有许多其他逻辑</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="comment">// .......</span></span><br><span class="line">        <span class="type">SearchAdapter</span> <span class="variable">adapter</span> <span class="operator">=</span> SearchRegister.getSearchAdapterByType(searchTypeEnum.getValue());</span><br><span class="line">        dataList = adapter.doSearch(searchText);</span><br><span class="line">        <span class="keyword">return</span> dataList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到了这里我们可以发现，通过注册器模式代码量大幅减少了，而且后续如果需要新增数据源，facade也无需改动了，只需新增Adapter接口实现类和在AdapterRegister中将相关实例注册，大大提高了可维护性和扩展性。</p>]]></content>
      
      
      <categories>
          
          <category> Java学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot集成Mybatis和Quartz实现配置多数据源的定时调度任务项目</title>
      <link href="/post/b0798327.html"/>
      <url>/post/b0798327.html</url>
      
        <content type="html"><![CDATA[<p>这篇文章是为了记录自己实现这个Demo的过程。</p><p>涉及到SpringBoot，Mybatis，Quartz，Mysql，Druid，日志框架使用SpringBoot默认集成的logback</p><h1 id="1-使用Maven构建多模块项目"><a href="#1-使用Maven构建多模块项目" class="headerlink" title="1.使用Maven构建多模块项目"></a>1.使用Maven构建多模块项目</h1><p>Maven多模块项目通过合理的模块拆分，实现了代码的复用，便于维护和管理。<br>注意父Maven工程中的pom文件指定的打包类型必须为pom，子模块的打包类型需要指定为jar，而子模块也需要在父pom文件中声明</p><p>项目结构如下：</p><ul><li>MultDataSourceSchedule  父工程<ul><li>common  公共模块，管理工具类、配置信息读取等</li><li>dao  持久化模块，与数据库交互</li><li>scheduleproject  定时任务调度业务模块</li><li>config  配置文件管理包，存放各种配置文件</li></ul></li></ul><p>其中common为基础模块，可根据实际需要引入redis，slf4j等。</p><p>dao与scheduleproject都需要依赖common，scheduleproject还需要依赖dao。</p><p>由于Maven具有传递依赖机制，dao引入依赖common，scheduleproject引入依赖dao，这时scheduleproject中会同样引入common，因此scheduleproject无需重复引入依赖common。</p><h2 id="1-1-创建父maven工程"><a href="#1-1-创建父maven工程" class="headerlink" title="1.1 创建父maven工程"></a>1.1 创建父maven工程</h2><p>创建完成后，删除掉src包，父工程中无需写代码，只需要配置pom文件。<br><img src="https://raw.githubusercontent.com/yasmin1024/hexoBlogImgRepository/main/postImg/01/createParentMaven.png"></p><h2 id="1-2-创建子模块"><a href="#1-2-创建子模块" class="headerlink" title="1.2 创建子模块"></a>1.2 创建子模块</h2><p>父工程上右键 → new → Module  选择Spring Initaializr ,注意JDK版本与java版本要对应。</p><p><img src="https://raw.githubusercontent.com/yasmin1024/hexoBlogImgRepository/main/postImg/01/creatSonModule.png"></p><p>依赖项选择Spring Web。重点注意❗❗❗ <em><strong><font color= red>SpringBoot版本的选择，3.x的版本不支持jdk1.8，因此使用jdk1.8需要选择2.x的版本来使用</font></strong></em></p><p><img src="https://raw.githubusercontent.com/yasmin1024/hexoBlogImgRepository/main/postImg/01/creat-important.png"></p><p>继续创建common模块和dao模块，此时可以不用再创建Spring项目了，父工程上右键 → new → Module  选择  新建模块</p><p><img src="https://raw.githubusercontent.com/yasmin1024/hexoBlogImgRepository/main/postImg/01/creatcommon.png"></p><p>接下来在父工程下创建一个folder，父工程上右键 → new → Folder，输入名称config，此时项目结构如下</p><p><img src="https://raw.githubusercontent.com/yasmin1024/hexoBlogImgRepository/main/postImg/01/createResult.png"><br>最后删除掉common模块和dao模块中的Application启动项，删除common、dao、scheduleproject模块中resource下的application.properties</p><p>在config下新建文件，命名为application.properties，相关配置信息写在这个文件中</p><h2 id="1-3-建立依赖"><a href="#1-3-建立依赖" class="headerlink" title="1.3 建立依赖"></a>1.3 建立依赖</h2><h3 id="1-3-1-父工程pom-xml"><a href="#1-3-1-父工程pom-xml" class="headerlink" title="1.3.1 父工程pom.xml"></a>1.3.1 父工程pom.xml</h3><p><code>&lt;parent&gt;.....&lt;/parent&gt;</code>这部分内容可以直接从scheduleproject&#x2F;pom.xml中复制过来</p><p><code>&lt;packaging&gt;pom&lt;/packaging&gt;</code>父工程需要指定打包方式为pom</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MultDataSourceSchedule<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--声明子模块--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>common<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>ScheduleProject<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>DAO<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--项目构建后的名称--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>MultDataSourceSchedule<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--spring boot提供的maven打包插件，可直接打包成jar或war--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--如果这里报错，就找本地maven仓库下 org\springframework\boot\spring-boot-starter-web 的版本号--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--项目的启动类--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                        com.example.SchedualProject.SchedualProjectApplication</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">mainClass</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3-2-common子模块pom-xml"><a href="#1-3-2-common子模块pom-xml" class="headerlink" title="1.3.2 common子模块pom.xml"></a>1.3.2 common子模块pom.xml</h3><p><code>&lt;parent&gt;.....&lt;/parent&gt;</code>声明父模块为MultDataSourceSchedule</p><p><code>&lt;packaging&gt;jar&lt;/packaging&gt;</code>指定打包方式为jar</p><p><code>&lt;classifier&gt;exec&lt;/classifier&gt;</code>这里需要注意，不能漏掉，否则会报错</p><p><em><strong><font color= red>maven多项目打包报错—子模块相互依赖打包时所遇到的问题:依赖的程序包找不到 package xxx does not exist</font></strong></em></p><p><strong>原因：spring-boot-maven-plugin打包出的jar是不可依赖的</strong></p><p>官方给出的解决方式就是添加这一行配置，那么打包时会生成两个jar包，一个用来执行即common-exec.jar，一个用来依赖即common.jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MultDataSourceSchedule<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>common<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--如果这里报错，就找本地maven仓库下 org\springframework\boot\spring-boot-starter-web 的版本号--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">classifier</span>&gt;</span>exec<span class="tag">&lt;/<span class="name">classifier</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-3-3-dao子模块pom-xml"><a href="#1-3-3-dao子模块pom-xml" class="headerlink" title="1.3.3 dao子模块pom.xml"></a>1.3.3 dao子模块pom.xml</h3><p>dao模块是持久化模块，需要引入Mysql，Mybatis，Druid</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MultDataSourceSchedule<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>DAO<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>DAO<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.33<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--如果这里报错，就找本地maven仓库下 org\springframework\boot\spring-boot-starter-web 的版本号--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">classifier</span>&gt;</span>exec<span class="tag">&lt;/<span class="name">classifier</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3-4-ScheduleProject模块pom-xml"><a href="#1-3-4-ScheduleProject模块pom-xml" class="headerlink" title="1.3.4 ScheduleProject模块pom.xml"></a>1.3.4 ScheduleProject模块pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MultDataSourceSchedule<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ScheduleProject<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>ScheduleProject<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>ScheduleProject<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>DAO<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--如果这里报错，就找本地maven仓库下 org\springframework\boot\spring-boot-starter-web 的版本号--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2-Mybatis-Druid实现多数据源的动态切换"><a href="#2-Mybatis-Druid实现多数据源的动态切换" class="headerlink" title="2.Mybatis+Druid实现多数据源的动态切换"></a>2.Mybatis+Druid实现多数据源的动态切换</h1><p>在开发过程中，不可避免需要对多个数据库进行读写的请求，不论是使用备库做读写分离，还是不同业务数据存储在不同的库中，都需要配置多个数据源。</p><p><a href="https://github.com/alibaba/druid">Druid</a>是来源于阿里的一个开源的连接池，提供了非常优秀的监控和扩展功能，而且监控不影响性能。</p><p>本项目对Mybatis和Druid的配置全部放在了xml文件中，以配置两个数据源为例。</p><h2 id="2-1-Mybatis配置"><a href="#2-1-Mybatis配置" class="headerlink" title="2.1 Mybatis配置"></a>2.1 Mybatis配置</h2><p>首先在config包下新建mybatis-config.xml和mybatis-config-business.xml，每一个文件中都配置一个数据库的信息</p><p><code>&lt;settings&gt;...&lt;/settings&gt;</code> 对Mybatis非常重要的配置，会改变Mybatis的运行时行为，不能出现拼写错误，否则会报错，具体配置项可以查看org.apache.ibatis.session.Configuration</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.example.DruidDataSourceFactory&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;Druid&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;Druid&quot;</span>&gt;</span></span><br><span class="line">        .......</span><br></pre></td></tr></table></figure><p>dataSource表示Mybatis获取连接的方式，内置三个值unPooled,pooled和JNDI。</p><ul><li>unpooled：非连接池，直接返回一个连接</li><li>pooled：连接池</li><li>JNDI：使用了JNDI技术，每个服务器对应的连接池都不一样，tomcat使用的dpcp连接池。这个属性只能在web工程中使用</li></ul><p>本项目使用Druid连接池，因此需要自定义一个Druid的工厂类，这个会在后面<br><a href="#span-id-jump22-%E5%AE%9E%E7%8E%B0druid%E6%95%B0%E6%8D%AE%E6%BA%90%E5%B7%A5%E5%8E%82%E7%B1%BBspan">实现druid数据源工厂类</a> 部分完成。</p><p>这里只列出mybatis-config.xml的配置信息，mybatis-config-business.xml可以参照进行修改</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;defaultStatementTimeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;10&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;defaultFetchSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;300&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;jdbcTypeForNull&quot;</span> <span class="attr">value</span>=<span class="string">&quot;NULL&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.example.DruidDataSourceFactory&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;Druid&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;Druid&quot;</span>&gt;</span><span class="comment">&lt;!--指定第三方数据源Druid--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;business&quot;</span>/&gt;</span><span class="comment">&lt;!--指定数据源id--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mysimpledemodb&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--最大连接数--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxActive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--初始连接数--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;initSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--最小空闲连接数--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--从连接池获取连接等待超时的时间  单位毫秒--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxWait&quot;</span> <span class="attr">value</span>=<span class="string">&quot;5000&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--配置连接在池中最小空闲时间  单位毫秒--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minIdleTime&quot;</span> <span class="attr">value</span>=<span class="string">&quot;300000&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--检查连接有效性，true-空闲时间过长时检查  false-不检查--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkWhileIdle&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--检查连接有效性的sql   只对MySQL有效  Oracle使用select 1 from dual--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;validSQL&quot;</span> <span class="attr">value</span>=<span class="string">&quot;select 1&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--true-检查minIdle内的空闲连接数，每次检查强制验证连接有效性--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;keepAlive&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--解决网络异常时业务线程阻塞在请求连接的过程--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;failFast&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;StudentMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-2-实现Druid数据源工厂类"><a href="#2-2-实现Druid数据源工厂类" class="headerlink" title="2.2 实现Druid数据源工厂类"></a><span id ="jump">2.2 实现Druid数据源工厂类</span></h2><p>由于Mybatis配置中指定了第三方数据源Druid，因此需要实现一个Druid数据源的工厂类。<br>关于自定义DruidDataSourceFactory的方式有很多种：</p><ul><li><strong><font color = darkred>extends DruidDataSourceFactory implements DataSourceFactory</font></strong> ：这种方式继承了Druid中已经实现的DruidDataSourceFactory并且实现接口DataSourceFactory，这种方式可以对Druid中的DruidDataSourceFactory进行一些个性化定制或者扩展，会额外增加代码量，可直接配置web.xml来使用Druid监控，后面两种方式可能需要自定义监控逻辑</li><li><strong><font color = darkred>extends UnpooledDataSourceFactory</font></strong> ：这种方式简单明了,因为UnpooledDataSourceFactory已经实现了获取UnpooledDataSource 的属性，因此只需覆盖掉需要的属性即可</li><li><strong><font color = darkred>implements DataSourceFactory</font></strong> ：这种方式需要实现setProperties和getDataSource方法，可以很灵活地配置DruidDataSource</li></ul><p>这里要注意的是，第一种方式在mybatis-config.xml文件中，property的name如果没有与Druid规定的属性名字保持一致，则需要对该属性进行覆盖，否则会报错；第二种方式也同样，如果没有与Mybatis规定的属性名一致且没有对属性进行覆盖，也会报错。</p><p>第三种方式由于是自定义getDataSource的实现逻辑，因此property的name可以自定义。</p><p>这里采用第三种方式，实现DataSourceFactory来自定义DruidDataSourceFactory。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义Druid数据源工厂类</span></span><br><span class="line"><span class="comment"> * new SqlSessionFactoryBuilder().build的时候会进入这里</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DruidDataSourceFactory</span> <span class="keyword">implements</span> <span class="title class_">DataSourceFactory</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置信息</span></span><br><span class="line">    <span class="keyword">private</span> Properties properties;</span><br><span class="line">UnpooledDataSourceFactory</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 已配置的数据源集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ConcurrentHashMap&lt;String, DruidDataSource&gt; dataSourceMap = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setProperties</span><span class="params">(Properties properties)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.properties = properties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">getDataSource</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">druidDataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取xml配置内容</span></span><br><span class="line">        druidDataSource.setDriverClassName(<span class="built_in">this</span>.properties.getProperty(<span class="string">&quot;driver&quot;</span>));</span><br><span class="line">        <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> <span class="built_in">this</span>.properties.getProperty(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (dataSourceMap.containsKey(key))&#123;</span><br><span class="line">            dataSourceMap.get(key).close();</span><br><span class="line">        &#125;</span><br><span class="line">        druidDataSource.setUrl(<span class="built_in">this</span>.properties.getProperty(<span class="string">&quot;url&quot;</span>));</span><br><span class="line">        druidDataSource.setUsername(<span class="built_in">this</span>.properties.getProperty(<span class="string">&quot;username&quot;</span>));</span><br><span class="line">        druidDataSource.setPassword(<span class="built_in">this</span>.properties.getProperty(<span class="string">&quot;password&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">maxActive</span> <span class="operator">=</span> Integer.parseInt(<span class="built_in">this</span>.properties.getProperty(<span class="string">&quot;maxActive&quot;</span>));</span><br><span class="line">        druidDataSource.setMaxActive(maxActive);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">initSize</span> <span class="operator">=</span> Integer.parseInt(<span class="built_in">this</span>.properties.getProperty(<span class="string">&quot;initSize&quot;</span>));</span><br><span class="line">        druidDataSource.setInitialSize(initSize);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">minIdle</span> <span class="operator">=</span> Integer.parseInt(<span class="built_in">this</span>.properties.getProperty(<span class="string">&quot;minIdle&quot;</span>));</span><br><span class="line">        druidDataSource.setMinIdle(minIdle);</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">maxWait</span> <span class="operator">=</span> Long.parseLong(<span class="built_in">this</span>.properties.getProperty(<span class="string">&quot;maxWait&quot;</span>));</span><br><span class="line">        druidDataSource.setMaxWait(maxWait);</span><br><span class="line"></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">failFast</span> <span class="operator">=</span> Boolean.parseBoolean(<span class="built_in">this</span>.properties.getProperty(<span class="string">&quot;failFast&quot;</span>));</span><br><span class="line">        druidDataSource.setFailFast(failFast);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//添加stat过滤器，用于统计监控信息，例如SQL执行时间、访问次数、连接池的活跃连接数、请求连接数、最大连接数等</span></span><br><span class="line">            druidDataSource.addFilters(<span class="string">&quot;stat&quot;</span>);</span><br><span class="line">            <span class="comment">//Spring Boot 默认的日志系统是 logback，并没有依赖 log4j，这里配置的 log4j 会报错。要想使用 log4j filter 要把日志系统切换为 log4j。</span></span><br><span class="line">            <span class="comment">//druidDataSource.addFilters(&quot;log4j&quot;);</span></span><br><span class="line">            <span class="comment">//添加config过滤器，用于配置连接池的一些参数，例如初始连接数、最大连接数、最小连接数等</span></span><br><span class="line">            druidDataSource.addFilters(<span class="string">&quot;config&quot;</span>);</span><br><span class="line">            druidDataSource.init();</span><br><span class="line">            dataSourceMap.put(key,druidDataSource);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException ex)&#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">            druidDataSource.close();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> druidDataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-初始化Mybatis"><a href="#2-3-初始化Mybatis" class="headerlink" title="2.3 初始化Mybatis"></a>2.3 初始化Mybatis</h2><p>项目中每一个数据源配置信息都分别存在不同的mybatis-config.xml文件中，需要在创建SqlSessionFactory实例时将每一个配置文件都传入，随着业务的发展可能会新增数据源，因此不能在代码中全部罗列出来再创建SqlSessionFactory对象。</p><p>可以采用这样一种解决方案：</p><ul><li>1.创建一个常量类DataBaseConfigKey用于存储datasourceId</li><li>2.配置datasourceId与mybatis-config.xml文件的映射关系</li><li>3.通过反射遍历常量类DataBaseConfigKey的属性来获取配置文件并读取</li></ul><p>在common模块下新建常量类DataBaseConfigKey</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DataBaseConfigKey</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 业务类数据库1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">BUSINESSDATASOURCE</span> <span class="operator">=</span> <span class="string">&quot;datasource.business&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 业务类数据库2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">BUSINESSDATASOURCE2</span> <span class="operator">=</span> <span class="string">&quot;datasource.business2&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在config&#x2F;application.properties中添加mybatis配置文件，用来指定每个mybatis配置文件的datasourceId</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># =============DataSource Config===========</span></span><br><span class="line"><span class="attr">datasource.business</span> = <span class="string">mybatis-config.xml</span></span><br><span class="line"><span class="attr">datasource.business2</span> = <span class="string">mybatis-config-business2.xml</span></span><br></pre></td></tr></table></figure><p>在dao模块下创建一个MybatisHelper类，用于管理SqlSession，初始化的逻辑如下：</p><ul><li>通过反射获取DataBaseConfigKey的成员变量的值，即dataSourceId</li><li>application.properties文件中通过dataSourceId找到对应的mybatis-config.xml配置文件</li><li>读取xml文件内容，建立SqlSessionFactory并放入Mybatis集合中</li></ul><p>首先创建一个工具类，common&#x2F;CommonUtil，读取applicaition.properties内容的方法就在这个工具类中实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonUtil</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Properties</span> <span class="variable">properties</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化配置信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">initConfiguration</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//读取配置文件</span></span><br><span class="line">            <span class="type">Resource</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileSystemResource</span>(<span class="string">&quot;config/application.properties&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (!resource.exists())&#123;</span><br><span class="line">                resource = <span class="keyword">new</span> <span class="title class_">ClassPathResource</span>(<span class="string">&quot;application.properties&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//载入配置文件至properties</span></span><br><span class="line">            properties = PropertiesLoaderUtils.loadProperties(resource);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据配置文件中的key获取对应的value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getProperties</span><span class="params">(String key)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (properties == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//还未载入配置文件</span></span><br><span class="line">            initConfiguration();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> properties.getProperty(key);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来按照上面的初始化逻辑来实现对Mybtais的初始化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisHelper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 已经建好的sqlsessionfactory集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, SqlSessionFactory&gt; sqlSessionFactoryMap = <span class="keyword">new</span> <span class="title class_">ConcurrentHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据application.properties配置文件中的配置key获取对应的sqlsessionfactory</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataSourceName 配置文件中的配置key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSessionFactory <span class="title function_">getSqlSessionFactory</span><span class="params">(String dataSourceName)</span>&#123;</span><br><span class="line">        <span class="comment">//在配置文件中根据datasourcename获取对应的mybatis配置文件名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">configFileName</span> <span class="operator">=</span> ConfigUtil.getProperties(dataSourceName);</span><br><span class="line">        <span class="comment">//根据mybatis配置文件名创建对应的sqlsessionfactory</span></span><br><span class="line">        <span class="keyword">return</span> getSqlSessionFactoryByFileName(configFileName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据指定文件名获取对应的sqlsessionfactory</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName  mybatis配置文件名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSessionFactory <span class="title function_">getSqlSessionFactoryByFileName</span><span class="params">(String fileName)</span>&#123;</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        Resource resource;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.hasText(fileName))&#123;</span><br><span class="line">            resource = <span class="keyword">new</span> <span class="title class_">FileSystemResource</span>(<span class="string">&quot;config/&quot;</span>+fileName);</span><br><span class="line">            <span class="keyword">if</span> (!resource.exists())&#123;</span><br><span class="line">                resource = <span class="keyword">new</span> <span class="title class_">ClassPathResource</span>(fileName);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//通过sqlsessionfactorybuilder建立SqlSessionFactory</span></span><br><span class="line">                <span class="comment">//build的时候会执行自定义的DruidDataSourceFactory里面对mybatis-config文件的的读取</span></span><br><span class="line">                sqlSessionFactory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(resource.getInputStream());</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;文件&quot;</span>+fileName+<span class="string">&quot;未配置&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化mybatis集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">InitMybatisMap</span><span class="params">()</span> <span class="keyword">throws</span> NoSuchMethodException, InvocationTargetException, InstantiationException, IllegalAccessException &#123;</span><br><span class="line">        <span class="comment">//通过反射获取所有mybatis数据库配置</span></span><br><span class="line">        Class&lt;DataBaseConfigKey&gt; clazz = DataBaseConfigKey.class;</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> clazz.getConstructor();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> constructor.newInstance();<span class="comment">//获取DataBaseConfigKey对象的实例</span></span><br><span class="line"></span><br><span class="line">        Field[] fields = clazz.getFields();<span class="comment">//获取public变量</span></span><br><span class="line">        <span class="keyword">for</span> (Field f :fields)&#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">begin</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">            <span class="type">String</span> <span class="variable">objValue</span> <span class="operator">=</span> (String) f.get(obj);<span class="comment">//获取实例obj的成员变量的值</span></span><br><span class="line">            <span class="keyword">if</span> (objValue != <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (!sqlSessionFactoryMap.containsKey(objValue))&#123;</span><br><span class="line">                    <span class="comment">//objValue数据源对应的sqlSessionFactory还未建立</span></span><br><span class="line">                    <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> getSqlSessionFactory(objValue);</span><br><span class="line">                    <span class="keyword">if</span> (sqlSessionFactory != <span class="literal">null</span>)&#123;</span><br><span class="line">                        sqlSessionFactoryMap.put(objValue,sqlSessionFactory);</span><br><span class="line">                        LogUtil.LogError(String.format(<span class="string">&quot;Mybatis %s 初始化成功，耗时: %s!&quot;</span>,objValue,System.currentTimeMillis()-begin));</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        LogUtil.LogError(String.format(<span class="string">&quot;Mybatis %s 初始化失败，耗时: %s!&quot;</span>,objValue,System.currentTimeMillis()-begin));</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要在启动类中手动添加初始化Mybatis逻辑</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SchedualProjectApplication</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SpringApplication.run(SchedualProjectApplication.class, args);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//可以根据需要配置不同的日志</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                LogUtil.Init();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                LogUtil.LogError(e.getMessage(),e);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//初始化mybatis集合</span></span><br><span class="line">            MybatisHelper.InitMybatisMap();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-实现多数据源手动切换"><a href="#2-4-实现多数据源手动切换" class="headerlink" title="2.4 实现多数据源手动切换"></a>2.4 实现多数据源手动切换</h2><p>上面已经实现了  加载Myatis配置-&gt;构建SqlSessionFactory   的过程，现在就需要通过SqlSessionFactory中获取SqlSession。</p><p>SqlSession 提供了在数据库执行 SQL 命令所需的所有方法。可以通过 SqlSession 实例来直接执行已映射的 SQL 语句。</p><p>首先实现获取SqlSession的方法，这个方法添加到MybatisHelper中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据datasoureid获取sqlsession</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> datasourceId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">getSqlSession</span><span class="params">(String datasourceId)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sqlSessionFactoryMap.containsKey(datasourceId))&#123;</span><br><span class="line">            <span class="keyword">if</span> (sqlSessionFactoryMap.get(datasourceId) == <span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="comment">//mybatis中对应的sqlsessionfactory为空，手动获取并放入集合中</span></span><br><span class="line">                <span class="type">SqlSessionFactory</span> <span class="variable">sessionFactory</span> <span class="operator">=</span> getSqlSessionFactory(datasourceId);</span><br><span class="line">                <span class="keyword">if</span> (sessionFactory != <span class="literal">null</span>)&#123;</span><br><span class="line">                    sqlSessionFactoryMap.put(datasourceId,sessionFactory);</span><br><span class="line">                    <span class="keyword">return</span> sessionFactory.openSession();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//获取到了sqlsessionFactory实例，获取对应的SqlSession</span></span><br><span class="line">                <span class="keyword">return</span> sqlSessionFactoryMap.get(datasourceId).openSession();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//没有获取到datasoruce对应的sqlsessionFactory，手动加载</span></span><br><span class="line">            <span class="type">SqlSessionFactory</span> <span class="variable">sessionFactory</span> <span class="operator">=</span> getSqlSessionFactory(datasourceId);</span><br><span class="line">            <span class="keyword">if</span> (sessionFactory != <span class="literal">null</span>)&#123;</span><br><span class="line">                sqlSessionFactoryMap.put(datasourceId,sessionFactory);</span><br><span class="line">                <span class="keyword">return</span> sessionFactory.openSession();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>数据表的创建以及初始数据的插入不再赘述</p><p>接下来创建映射器mapper，mapper.xml包含了SQL代码和映射定义信息，mapper.xml文件放在config下，mapper接口类放在Dao中，映射器需要添加到对应数据源配置文件的<mappers></mappers>元素下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.example.scheduleproject.mappers.StudentMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentInfoByStudentNum&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.example.scheduleproject.model.Student&quot;</span>&gt;</span></span><br><span class="line">        select stuNum,name,classNum,gender,age from student where stuNum = #&#123;studentNum&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">StudentMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据学号查询学生信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> studentNum</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Student <span class="title function_">getStudentInfoByStudentNum</span><span class="params">(<span class="meta">@Param(&quot;studentNum&quot;)</span> String studentNum)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在可以在启动类中测试是否可以成功执行了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        SpringApplication.run(SchedualProjectApplication.class, args);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Logger.Init();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            Logger.LogError(e.getMessage(),e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化mybatis集合</span></span><br><span class="line">        MybatisHelper.InitMybatisMap();</span><br><span class="line"></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisHelper.getSqlSession(DataBaseConfigKey.BUSINESSDATASOURCE);</span><br><span class="line">        <span class="type">StudentMapper</span> <span class="variable">mapper</span> <span class="operator">=</span> sqlSession.getMapper(StudentMapper.class);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> mapper.getStudentInfoByStudentNum(<span class="string">&quot;20220101&quot;</span>);</span><br><span class="line">        System.out.println(student.toString());</span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> MybatisHelper.getSqlSession(DataBaseConfigKey.BUSINESSDATASOURCE2);</span><br><span class="line">        <span class="type">CityMapper</span> <span class="variable">cityMapper</span> <span class="operator">=</span> session.getMapper(CityMapper.class);</span><br><span class="line">        <span class="type">City</span> <span class="variable">city</span> <span class="operator">=</span> cityMapper.getCityProvince(<span class="string">&quot;武汉&quot;</span>);</span><br><span class="line">        System.out.println(city.toString());</span><br><span class="line">        session.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果如下，实现了手动切换数据源的功能</p><p><img src="https://raw.githubusercontent.com/yasmin1024/hexoBlogImgRepository/main/postImg/01/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20230428184758.png"></p><h2 id="2-5-实现多数据源动态切换"><a href="#2-5-实现多数据源动态切换" class="headerlink" title="2.5 实现多数据源动态切换"></a>2.5 实现多数据源动态切换</h2><h1 id="3-Quartz定时任务"><a href="#3-Quartz定时任务" class="headerlink" title="3.Quartz定时任务"></a>3.Quartz定时任务</h1>]]></content>
      
      
      <categories>
          
          <category> Java学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Quartz </tag>
            
            <tag> Mybatis </tag>
            
            <tag> Druid </tag>
            
            <tag> 多数据源配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/4a17b156.html"/>
      <url>/post/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
